name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - master

permissions:
  checks: write

jobs:
  tests:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        java-version: [ 17 ]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}

      - name: Cache Test Artifacts
        uses: actions/cache@v3
        with:
          path: .artifacts
          key: ${{ runner.os }}-artifacts-${{ hashFiles('**/Artifacts.java') }}

      - name: Install ffmpeg on Ubuntu
        run: sudo apt-get update && sudo apt-get install -y ffmpeg && ffmpeg -version
        if: startsWith(matrix.os, 'ubuntu')

      - name: Install ffmpeg on MacOS
        run: brew install ffmpeg && ls -lhtr /usr/local/opt/ffmpeg/ && ffmpeg -version
        if: startsWith(matrix.os, 'macos')

      - name: Install ffmpeg on Windows
        run: choco install ffmpeg && ffmpeg -version
        if: startsWith(matrix.os, 'windows')

      - name: Build on Ubuntu
        uses: burrunan/gradle-cache-action@v1
        if: startsWith(matrix.os, 'ubuntu')
        with:
          job-id: ubuntu
          arguments: --console=plain build

      - name: Build on MacOS
        uses: burrunan/gradle-cache-action@v1
        if: startsWith(matrix.os, 'macos')
        with:
          job-id: macos
          arguments: --console=plain build

      - name: Build on Windows
        uses: burrunan/gradle-cache-action@v1
        if: startsWith(matrix.os, 'windows')
        with:
          job-id: windows
          arguments: --console=plain build

      - name: Test Report (${{ runner.os }})
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Tests (${{ runner.os }})
          reporter: java-junit
          path: '**/TEST-*.xml'
